(function(e){e.extend({uploadPreview:function(t){var n=e.extend({input_field:".image-input",preview_box:".image-preview",label_field:".image-label",label_default:"Выберите картинку",label_selected:"<span class='galka'></span>",no_label:false},t);if(window.File&&window.FileList&&window.FileReader){if(typeof e(n.input_field)!=="undefined"&&e(n.input_field)!==null){e(n.input_field).change(function(){var t=this.files;if(t.length>0){var r=t[0];var i=new FileReader;i.addEventListener("load",function(t){var i=t.target;if(r.type.match("image")){e(n.preview_box).css("background-image","url("+i.result+")");e(n.preview_box).css("background-size","cover");e(n.preview_box).css("background-position","center center")}else if(r.type.match("audio")){e(n.preview_box).html("<audio controls><source src='"+i.result+"' type='"+r.type+"' />Your browser does not support the audio element.</audio>")}else{alert("This file type is not supported yet.")}});if(n.no_label==false){e(n.label_field).html(n.label_selected)}i.readAsDataURL(r)}else{if(n.no_label==false){e(n.label_field).html(n.label_default)}e(n.preview_box).css("background-image","none");e(n.preview_box+" audio").remove()}})}}else{alert("You need a browser with file reader support, to use this form properly.");return false}}})})(jQuery);
!function(a){function f(a,b){if(!(a.originalEvent.touches.length>1)){a.preventDefault();var c=a.originalEvent.changedTouches[0],d=document.createEvent("MouseEvents");d.initMouseEvent(b,!0,!0,window,1,c.screenX,c.screenY,c.clientX,c.clientY,!1,!1,!1,!1,0,null),a.target.dispatchEvent(d)}}if(a.support.touch="ontouchend"in document,a.support.touch){var e,b=a.ui.mouse.prototype,c=b._mouseInit,d=b._mouseDestroy;b._touchStart=function(a){var b=this;!e&&b._mouseCapture(a.originalEvent.changedTouches[0])&&(e=!0,b._touchMoved=!1,f(a,"mouseover"),f(a,"mousemove"),f(a,"mousedown"))},b._touchMove=function(a){e&&(this._touchMoved=!0,f(a,"mousemove"))},b._touchEnd=function(a){e&&(f(a,"mouseup"),f(a,"mouseout"),this._touchMoved||f(a,"click"),e=!1)},b._mouseInit=function(){var b=this;b.element.bind({touchstart:a.proxy(b,"_touchStart"),touchmove:a.proxy(b,"_touchMove"),touchend:a.proxy(b,"_touchEnd")}),c.call(b)},b._mouseDestroy=function(){var b=this;b.element.unbind({touchstart:a.proxy(b,"_touchStart"),touchmove:a.proxy(b,"_touchMove"),touchend:a.proxy(b,"_touchEnd")}),d.call(b)}}}(jQuery);
( function( window ) {
'use strict';
function classReg( className ) {
  return new RegExp("(^|\\s+)" + className + "(\\s+|$)");
}
var hasClass, addClass, removeClass;
if ( 'classList' in document.documentElement ) {
  hasClass = function( elem, c ) {
    return elem.classList.contains( c );
  };
  addClass = function( elem, c ) {
    elem.classList.add( c );
  };
  removeClass = function( elem, c ) {
    elem.classList.remove( c );
  };
}
else {
  hasClass = function( elem, c ) {
    return classReg( c ).test( elem.className );
  };
  addClass = function( elem, c ) {
    if ( !hasClass( elem, c ) ) {
      elem.className = elem.className + ' ' + c;
    }
  };
  removeClass = function( elem, c ) {
    elem.className = elem.className.replace( classReg( c ), ' ' );
  };
}
function toggleClass( elem, c ) {
  var fn = hasClass( elem, c ) ? removeClass : addClass;
  fn( elem, c );
}
var classie = {
  // full names
  hasClass: hasClass,
  addClass: addClass,
  removeClass: removeClass,
  toggleClass: toggleClass,
  // short names
  has: hasClass,
  add: addClass,
  remove: removeClass,
  toggle: toggleClass
};
// transport
if ( typeof define === 'function' && define.amd ) {
  // AMD
  define( classie );
} else {
  // browser global
  window.classie = classie;
}
})( window );